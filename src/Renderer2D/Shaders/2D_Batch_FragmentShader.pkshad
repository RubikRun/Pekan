#version 330 core

in vec2 vTexCoord;
in float vTexIndex;
in float vShapeIndex;
out vec4 FragColor;

uniform sampler1D uColorsTexture;
uniform int uColorsCount;
uniform sampler2D uTextures[{{MAX_TEXTURE_SLOTS}} - 1];

void main()
{
    // Sample shape's color from the 1D colors texture
    vec4 shapeColor = texture(uColorsTexture, (vShapeIndex + 0.5) / float(uColorsCount));

    // Sample sprite's color from sprite's 2D texture
    vec4 spriteColor = texture(uTextures[int(vTexIndex + 0.5)], vTexCoord);

    // Check if we are currently rendering a sprite or a shape
    float isSprite = float(vTexIndex >= 0.0);

    // Output either shape's color or sprite's color
    // depending on whether we are rendering a shape or a sprite
    FragColor = mix(shapeColor, spriteColor, isSprite);
}
